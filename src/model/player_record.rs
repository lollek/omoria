use libc;

use model::{ Class, GameTime, Player, PlayerFlags, Race, Sex, Time, Wallet };

#[repr(C)]
#[derive(Serialize, Deserialize)]
pub struct PlayerRecord {
    pub uid: libc::int64_t,
    pub account: libc::int64_t,
    pub money: Wallet,
    pub birth: GameTime,
    pub cur_age: GameTime,
    pub cur_quest: libc::uint16_t,
    pub quests: libc::uint8_t,
    pub claim_check: libc::int64_t,
    pub play_tm: Time,
    pub name: String,
    pub race: Race,
    pub sex: Sex,
    pub class: Class,
    pub history: Vec<String>,
    pub cheated: libc::uint8_t,
    pub age: libc::uint16_t,
    pub ht: libc::uint16_t,
    pub wt: libc::uint16_t,
    pub sc: libc::int16_t,
    pub max_exp: libc::int64_t,
    pub exp: libc::int64_t,
    pub rep: libc::int64_t,
    pub lev: libc::uint16_t,
    pub max_lev: libc::uint16_t,
    pub expfact: libc::c_float,
    pub fos: libc::int16_t,
    pub stl: libc::int16_t,
    pub bth: libc::int16_t,
    pub bthb: libc::int16_t,
    pub mana: libc::int16_t,
    pub cmana: libc::c_float,
    pub ptohit: libc::int16_t,
    pub ptodam: libc::int16_t,
    pub pac: libc::int16_t,
    pub ptoac: libc::int16_t,
    pub dis_th: libc::int16_t,
    pub dis_td: libc::int16_t,
    pub dis_ac: libc::int16_t,
    pub dis_tac: libc::int16_t,
    pub disarm: libc::int16_t,
    pub save: libc::int16_t,
    pub inven_weight: libc::c_long,
    pub flags: PlayerFlags,
    pub player: Player,
    pub char_row: libc::c_long,
    pub char_col: libc::c_long,
}
